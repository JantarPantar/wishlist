{"ast":null,"code":"import React, { useMemo } from 'react';\nimport Svg, { Defs, G, Path, Rect, Image, ClipPath, LinearGradient, Stop } from 'react-native-svg';\nimport genMatrix from \"./genMatrix\";\nimport transformMatrixIntoPath from \"./transformMatrixIntoPath\";\nvar renderLogo = function renderLogo(_ref) {\n  var size = _ref.size,\n    logo = _ref.logo,\n    logoSize = _ref.logoSize,\n    logoBackgroundColor = _ref.logoBackgroundColor,\n    logoMargin = _ref.logoMargin,\n    logoBorderRadius = _ref.logoBorderRadius;\n  var logoPosition = (size - logoSize - logoMargin * 2) / 2;\n  var logoBackgroundSize = logoSize + logoMargin * 2;\n  var logoBackgroundBorderRadius = logoBorderRadius + logoMargin / logoSize * logoBorderRadius;\n  return React.createElement(G, {\n    x: logoPosition,\n    y: logoPosition\n  }, React.createElement(Defs, null, React.createElement(ClipPath, {\n    id: \"clip-logo-background\"\n  }, React.createElement(Rect, {\n    width: logoBackgroundSize,\n    height: logoBackgroundSize,\n    rx: logoBackgroundBorderRadius,\n    ry: logoBackgroundBorderRadius\n  })), React.createElement(ClipPath, {\n    id: \"clip-logo\"\n  }, React.createElement(Rect, {\n    width: logoSize,\n    height: logoSize,\n    rx: logoBorderRadius,\n    ry: logoBorderRadius\n  }))), React.createElement(G, null, React.createElement(Rect, {\n    width: logoBackgroundSize,\n    height: logoBackgroundSize,\n    fill: logoBackgroundColor,\n    clipPath: \"url(#clip-logo-background)\"\n  })), React.createElement(G, {\n    x: logoMargin,\n    y: logoMargin\n  }, React.createElement(Image, {\n    width: logoSize,\n    height: logoSize,\n    preserveAspectRatio: \"xMidYMid slice\",\n    href: logo,\n    clipPath: \"url(#clip-logo)\"\n  })));\n};\nvar QRCode = function QRCode(_ref2) {\n  var _ref2$value = _ref2.value,\n    value = _ref2$value === void 0 ? 'this is a QR code' : _ref2$value,\n    _ref2$size = _ref2.size,\n    size = _ref2$size === void 0 ? 100 : _ref2$size,\n    _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? 'black' : _ref2$color,\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? 'white' : _ref2$backgroundColor,\n    logo = _ref2.logo,\n    _ref2$logoSize = _ref2.logoSize,\n    logoSize = _ref2$logoSize === void 0 ? size * 0.2 : _ref2$logoSize,\n    _ref2$logoBackgroundC = _ref2.logoBackgroundColor,\n    logoBackgroundColor = _ref2$logoBackgroundC === void 0 ? 'transparent' : _ref2$logoBackgroundC,\n    _ref2$logoMargin = _ref2.logoMargin,\n    logoMargin = _ref2$logoMargin === void 0 ? 2 : _ref2$logoMargin,\n    _ref2$logoBorderRadiu = _ref2.logoBorderRadius,\n    logoBorderRadius = _ref2$logoBorderRadiu === void 0 ? 0 : _ref2$logoBorderRadiu,\n    _ref2$quietZone = _ref2.quietZone,\n    quietZone = _ref2$quietZone === void 0 ? 0 : _ref2$quietZone,\n    _ref2$enableLinearGra = _ref2.enableLinearGradient,\n    enableLinearGradient = _ref2$enableLinearGra === void 0 ? false : _ref2$enableLinearGra,\n    _ref2$gradientDirecti = _ref2.gradientDirection,\n    gradientDirection = _ref2$gradientDirecti === void 0 ? ['0%', '0%', '100%', '100%'] : _ref2$gradientDirecti,\n    _ref2$linearGradient = _ref2.linearGradient,\n    linearGradient = _ref2$linearGradient === void 0 ? ['rgb(255,0,0)', 'rgb(0,255,255)'] : _ref2$linearGradient,\n    _ref2$ecl = _ref2.ecl,\n    ecl = _ref2$ecl === void 0 ? 'M' : _ref2$ecl,\n    getRef = _ref2.getRef,\n    onError = _ref2.onError;\n  var result = useMemo(function () {\n    try {\n      return transformMatrixIntoPath(genMatrix(value, ecl), size);\n    } catch (error) {\n      if (onError && typeof onError === 'function') {\n        onError(error);\n      } else {\n        throw error;\n      }\n    }\n  }, [value, size, ecl]);\n  if (!result) {\n    return null;\n  }\n  var path = result.path,\n    cellSize = result.cellSize;\n  return React.createElement(Svg, {\n    ref: getRef,\n    viewBox: [-quietZone, -quietZone, size + quietZone * 2, size + quietZone * 2].join(' '),\n    width: size,\n    height: size\n  }, React.createElement(Defs, null, React.createElement(LinearGradient, {\n    id: \"grad\",\n    x1: gradientDirection[0],\n    y1: gradientDirection[1],\n    x2: gradientDirection[2],\n    y2: gradientDirection[3]\n  }, React.createElement(Stop, {\n    offset: \"0\",\n    stopColor: linearGradient[0],\n    stopOpacity: \"1\"\n  }), React.createElement(Stop, {\n    offset: \"1\",\n    stopColor: linearGradient[1],\n    stopOpacity: \"1\"\n  }))), React.createElement(G, null, React.createElement(Rect, {\n    x: -quietZone,\n    y: -quietZone,\n    width: size + quietZone * 2,\n    height: size + quietZone * 2,\n    fill: backgroundColor\n  })), React.createElement(G, null, React.createElement(Path, {\n    d: path,\n    strokeLinecap: \"butt\",\n    stroke: enableLinearGradient ? 'url(#grad)' : color,\n    strokeWidth: cellSize\n  })), logo && renderLogo({\n    size: size,\n    logo: logo,\n    logoSize: logoSize,\n    logoBackgroundColor: logoBackgroundColor,\n    logoMargin: logoMargin,\n    logoBorderRadius: logoBorderRadius\n  }));\n};\nexport default QRCode;","map":{"version":3,"names":["React","useMemo","Svg","Defs","G","Path","Rect","Image","ClipPath","LinearGradient","Stop","genMatrix","transformMatrixIntoPath","renderLogo","size","logo","logoSize","logoBackgroundColor","logoMargin","logoBorderRadius","logoPosition","logoBackgroundSize","logoBackgroundBorderRadius","QRCode","value","color","backgroundColor","quietZone","enableLinearGradient","gradientDirection","linearGradient","ecl","getRef","onError","result","error","path","cellSize","join"],"sources":["C:/Users/Norbert PC/Desktop/WishList/wishlist/node_modules/react-native-qrcode-svg/src/index.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport Svg, {\n  Defs,\n  G,\n  Path,\n  Rect,\n  Image,\n  ClipPath,\n  LinearGradient,\n  Stop\n} from 'react-native-svg'\nimport genMatrix from './genMatrix'\nimport transformMatrixIntoPath from './transformMatrixIntoPath'\n\nconst renderLogo = ({\n  size,\n  logo,\n  logoSize,\n  logoBackgroundColor,\n  logoMargin,\n  logoBorderRadius\n}) => {\n  const logoPosition = (size - logoSize - logoMargin * 2) / 2\n  const logoBackgroundSize = logoSize + logoMargin * 2\n  const logoBackgroundBorderRadius =\n    logoBorderRadius + (logoMargin / logoSize) * logoBorderRadius\n\n  return (\n    <G x={logoPosition} y={logoPosition}>\n      <Defs>\n        <ClipPath id='clip-logo-background'>\n          <Rect\n            width={logoBackgroundSize}\n            height={logoBackgroundSize}\n            rx={logoBackgroundBorderRadius}\n            ry={logoBackgroundBorderRadius}\n          />\n        </ClipPath>\n        <ClipPath id='clip-logo'>\n          <Rect\n            width={logoSize}\n            height={logoSize}\n            rx={logoBorderRadius}\n            ry={logoBorderRadius}\n          />\n        </ClipPath>\n      </Defs>\n      <G>\n        <Rect\n          width={logoBackgroundSize}\n          height={logoBackgroundSize}\n          fill={logoBackgroundColor}\n          clipPath='url(#clip-logo-background)'\n        />\n      </G>\n      <G x={logoMargin} y={logoMargin}>\n        <Image\n          width={logoSize}\n          height={logoSize}\n          preserveAspectRatio='xMidYMid slice'\n          href={logo}\n          clipPath='url(#clip-logo)'\n        />\n      </G>\n    </G>\n  )\n}\n\nconst QRCode = ({\n  value = 'this is a QR code',\n  size = 100,\n  color = 'black',\n  backgroundColor = 'white',\n  logo,\n  logoSize = size * 0.2,\n  logoBackgroundColor = 'transparent',\n  logoMargin = 2,\n  logoBorderRadius = 0,\n  quietZone = 0,\n  enableLinearGradient = false,\n  gradientDirection = ['0%', '0%', '100%', '100%'],\n  linearGradient = ['rgb(255,0,0)', 'rgb(0,255,255)'],\n  ecl = 'M',\n  getRef,\n  onError\n}) => {\n  const result = useMemo(() => {\n    try {\n      return transformMatrixIntoPath(genMatrix(value, ecl), size)\n    } catch (error) {\n      if (onError && typeof onError === 'function') {\n        onError(error)\n      } else {\n        // Pass the error when no handler presented\n        throw error\n      }\n    }\n  }, [value, size, ecl])\n\n  if (!result) {\n    return null\n  }\n\n  const { path, cellSize } = result\n\n  return (\n    <Svg\n      ref={getRef}\n      viewBox={[\n        -quietZone,\n        -quietZone,\n        size + quietZone * 2,\n        size + quietZone * 2\n      ].join(' ')}\n      width={size}\n      height={size}\n    >\n      <Defs>\n        <LinearGradient\n          id='grad'\n          x1={gradientDirection[0]}\n          y1={gradientDirection[1]}\n          x2={gradientDirection[2]}\n          y2={gradientDirection[3]}\n        >\n          <Stop offset='0' stopColor={linearGradient[0]} stopOpacity='1' />\n          <Stop offset='1' stopColor={linearGradient[1]} stopOpacity='1' />\n        </LinearGradient>\n      </Defs>\n      <G>\n        <Rect\n          x={-quietZone}\n          y={-quietZone}\n          width={size + quietZone * 2}\n          height={size + quietZone * 2}\n          fill={backgroundColor}\n        />\n      </G>\n      <G>\n        <Path\n          d={path}\n          strokeLinecap='butt'\n          stroke={enableLinearGradient ? 'url(#grad)' : color}\n          strokeWidth={cellSize}\n        />\n      </G>\n      {logo &&\n        renderLogo({\n          size,\n          logo,\n          logoSize,\n          logoBackgroundColor,\n          logoMargin,\n          logoBorderRadius\n        })}\n    </Svg>\n  )\n}\n\nexport default QRCode\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,GAAG,IACRC,IAAI,EACJC,CAAC,EACDC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,QAAQ,EACRC,cAAc,EACdC,IAAI,QACC,kBAAkB;AACzB,OAAOC,SAAS;AAChB,OAAOC,uBAAuB;AAE9B,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAOV;EAAA,IANJC,IAAI,QAAJA,IAAI;IACJC,IAAI,QAAJA,IAAI;IACJC,QAAQ,QAARA,QAAQ;IACRC,mBAAmB,QAAnBA,mBAAmB;IACnBC,UAAU,QAAVA,UAAU;IACVC,gBAAgB,QAAhBA,gBAAgB;EAEhB,IAAMC,YAAY,GAAG,CAACN,IAAI,GAAGE,QAAQ,GAAGE,UAAU,GAAG,CAAC,IAAI,CAAC;EAC3D,IAAMG,kBAAkB,GAAGL,QAAQ,GAAGE,UAAU,GAAG,CAAC;EACpD,IAAMI,0BAA0B,GAC9BH,gBAAgB,GAAID,UAAU,GAAGF,QAAQ,GAAIG,gBAAgB;EAE/D,OACE,oBAAC,CAAC;IAAC,CAAC,EAAEC,YAAa;IAAC,CAAC,EAAEA;EAAa,GAClC,oBAAC,IAAI,QACH,oBAAC,QAAQ;IAAC,EAAE,EAAC;EAAsB,GACjC,oBAAC,IAAI;IACH,KAAK,EAAEC,kBAAmB;IAC1B,MAAM,EAAEA,kBAAmB;IAC3B,EAAE,EAAEC,0BAA2B;IAC/B,EAAE,EAAEA;EAA2B,EAC/B,CACO,EACX,oBAAC,QAAQ;IAAC,EAAE,EAAC;EAAW,GACtB,oBAAC,IAAI;IACH,KAAK,EAAEN,QAAS;IAChB,MAAM,EAAEA,QAAS;IACjB,EAAE,EAAEG,gBAAiB;IACrB,EAAE,EAAEA;EAAiB,EACrB,CACO,CACN,EACP,oBAAC,CAAC,QACA,oBAAC,IAAI;IACH,KAAK,EAAEE,kBAAmB;IAC1B,MAAM,EAAEA,kBAAmB;IAC3B,IAAI,EAAEJ,mBAAoB;IAC1B,QAAQ,EAAC;EAA4B,EACrC,CACA,EACJ,oBAAC,CAAC;IAAC,CAAC,EAAEC,UAAW;IAAC,CAAC,EAAEA;EAAW,GAC9B,oBAAC,KAAK;IACJ,KAAK,EAAEF,QAAS;IAChB,MAAM,EAAEA,QAAS;IACjB,mBAAmB,EAAC,gBAAgB;IACpC,IAAI,EAAED,IAAK;IACX,QAAQ,EAAC;EAAiB,EAC1B,CACA,CACF;AAER,CAAC;AAED,IAAMQ,MAAM,GAAG,SAATA,MAAM,QAiBN;EAAA,wBAhBJC,KAAK;IAALA,KAAK,4BAAG,mBAAmB;IAAA,mBAC3BV,IAAI;IAAJA,IAAI,2BAAG,GAAG;IAAA,oBACVW,KAAK;IAALA,KAAK,4BAAG,OAAO;IAAA,8BACfC,eAAe;IAAfA,eAAe,sCAAG,OAAO;IACzBX,IAAI,SAAJA,IAAI;IAAA,uBACJC,QAAQ;IAARA,QAAQ,+BAAGF,IAAI,GAAG,GAAG;IAAA,8BACrBG,mBAAmB;IAAnBA,mBAAmB,sCAAG,aAAa;IAAA,yBACnCC,UAAU;IAAVA,UAAU,iCAAG,CAAC;IAAA,8BACdC,gBAAgB;IAAhBA,gBAAgB,sCAAG,CAAC;IAAA,wBACpBQ,SAAS;IAATA,SAAS,gCAAG,CAAC;IAAA,8BACbC,oBAAoB;IAApBA,oBAAoB,sCAAG,KAAK;IAAA,8BAC5BC,iBAAiB;IAAjBA,iBAAiB,sCAAG,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;IAAA,6BAChDC,cAAc;IAAdA,cAAc,qCAAG,CAAC,cAAc,EAAE,gBAAgB,CAAC;IAAA,kBACnDC,GAAG;IAAHA,GAAG,0BAAG,GAAG;IACTC,MAAM,SAANA,MAAM;IACNC,OAAO,SAAPA,OAAO;EAEP,IAAMC,MAAM,GAAGjC,OAAO,CAAC,YAAM;IAC3B,IAAI;MACF,OAAOW,uBAAuB,CAACD,SAAS,CAACa,KAAK,EAAEO,GAAG,CAAC,EAAEjB,IAAI,CAAC;IAC7D,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACd,IAAIF,OAAO,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;QAC5CA,OAAO,CAACE,KAAK,CAAC;MAChB,CAAC,MAAM;QAEL,MAAMA,KAAK;MACb;IACF;EACF,CAAC,EAAE,CAACX,KAAK,EAAEV,IAAI,EAAEiB,GAAG,CAAC,CAAC;EAEtB,IAAI,CAACG,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,IAAQE,IAAI,GAAeF,MAAM,CAAzBE,IAAI;IAAEC,QAAQ,GAAKH,MAAM,CAAnBG,QAAQ;EAEtB,OACE,oBAAC,GAAG;IACF,GAAG,EAAEL,MAAO;IACZ,OAAO,EAAE,CACP,CAACL,SAAS,EACV,CAACA,SAAS,EACVb,IAAI,GAAGa,SAAS,GAAG,CAAC,EACpBb,IAAI,GAAGa,SAAS,GAAG,CAAC,CACrB,CAACW,IAAI,CAAC,GAAG,CAAE;IACZ,KAAK,EAAExB,IAAK;IACZ,MAAM,EAAEA;EAAK,GAEb,oBAAC,IAAI,QACH,oBAAC,cAAc;IACb,EAAE,EAAC,MAAM;IACT,EAAE,EAAEe,iBAAiB,CAAC,CAAC,CAAE;IACzB,EAAE,EAAEA,iBAAiB,CAAC,CAAC,CAAE;IACzB,EAAE,EAAEA,iBAAiB,CAAC,CAAC,CAAE;IACzB,EAAE,EAAEA,iBAAiB,CAAC,CAAC;EAAE,GAEzB,oBAAC,IAAI;IAAC,MAAM,EAAC,GAAG;IAAC,SAAS,EAAEC,cAAc,CAAC,CAAC,CAAE;IAAC,WAAW,EAAC;EAAG,EAAG,EACjE,oBAAC,IAAI;IAAC,MAAM,EAAC,GAAG;IAAC,SAAS,EAAEA,cAAc,CAAC,CAAC,CAAE;IAAC,WAAW,EAAC;EAAG,EAAG,CAClD,CACZ,EACP,oBAAC,CAAC,QACA,oBAAC,IAAI;IACH,CAAC,EAAE,CAACH,SAAU;IACd,CAAC,EAAE,CAACA,SAAU;IACd,KAAK,EAAEb,IAAI,GAAGa,SAAS,GAAG,CAAE;IAC5B,MAAM,EAAEb,IAAI,GAAGa,SAAS,GAAG,CAAE;IAC7B,IAAI,EAAED;EAAgB,EACtB,CACA,EACJ,oBAAC,CAAC,QACA,oBAAC,IAAI;IACH,CAAC,EAAEU,IAAK;IACR,aAAa,EAAC,MAAM;IACpB,MAAM,EAAER,oBAAoB,GAAG,YAAY,GAAGH,KAAM;IACpD,WAAW,EAAEY;EAAS,EACtB,CACA,EACHtB,IAAI,IACHF,UAAU,CAAC;IACTC,IAAI,EAAJA,IAAI;IACJC,IAAI,EAAJA,IAAI;IACJC,QAAQ,EAARA,QAAQ;IACRC,mBAAmB,EAAnBA,mBAAmB;IACnBC,UAAU,EAAVA,UAAU;IACVC,gBAAgB,EAAhBA;EACF,CAAC,CAAC,CACA;AAEV,CAAC;AAED,eAAeI,MAAM"},"metadata":{},"sourceType":"module"}