{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nexport default function ListDetail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var itemId = route.params.itemId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataapi = _useState2[0],\n      setDataapi = _useState2[1];\n\n  function LoadData() {\n    fetch('http://192.168.1.107:45455/api/items/' + itemId).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setDataapi(data);\n    });\n  }\n\n  LoadData();\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20\n    }\n  }, \"SEznam\"), React.createElement(Text, null, \"url: \", itemId), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, dataapi.map(function (aa) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {}\n    }, React.createElement(View, {\n      style: styles.item\n    }, React.createElement(View, {\n      style: {\n        borderLeftWidth: 2,\n        backgroundColor: '#' + aa.color,\n        padding: 5\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      }\n    }, aa.name))));\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      position: 'absolute',\n      bottom: 20,\n      right: 10\n    },\n    onPress: function onPress() {\n      navigation.navigate('AddItem', {\n        url: itemId\n      });\n    }\n  }, React.createElement(Ionicons, {\n    name: \"add\"\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    width: '100%'\n  },\n  item: {\n    backgroundColor: '#fff',\n    padding: 10,\n    margin: 5,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Norbert PC/Desktop/WishList/wishlist/Screens/ListDetail.tsx"],"names":["React","useState","Ionicons","ListDetail","route","navigation","itemId","params","dataapi","setDataapi","LoadData","fetch","then","response","json","data","styles","container","fontSize","flexDirection","map","aa","item","borderLeftWidth","backgroundColor","color","padding","name","position","bottom","right","navigate","url","StyleSheet","create","alignItems","width","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,eAAe,SAASC,UAAT,OAAwC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAbC,UAAa,QAAbA,UAAa;AACrD,MAAQC,MAAR,GAAmBF,KAAK,CAACG,MAAzB,CAAQD,MAAR;;AACA,kBAA8BL,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAASC,QAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,0CAAwCL,MAAzC,CAAL,CAAsDM,IAAtD,CAA2D,UAACC,QAAD;AAAA,aAAYA,QAAQ,CAACC,IAAT,EAAZ;AAAA,KAA3D,EAAwFF,IAAxF,CAA6F,UAACG,IAAD;AAAA,aAAQN,UAAU,CAACM,IAAD,CAAlB;AAAA,KAA7F;AACD;;AACDL,EAAAA,QAAQ;AAEN,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV;AAAb,cADF,EAGE,oBAAC,IAAD,iBAAaZ,MAAb,CAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,aAAa,EAAC;AAAf;AAAb,KACCX,OAAO,CAACY,GAAR,CAAY,UAACC,EAAD;AAAA,WACb,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAI,CAAE;AAAjC,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAC,CAAjB;AAAmBC,QAAAA,eAAe,EAAC,MAAIH,EAAE,CAACI,KAA1C;AAAgDC,QAAAA,OAAO,EAAC;AAAxD;AAAb,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACR,QAAAA,QAAQ,EAAC;AAAV;AAAb,OAA8BG,EAAE,CAACM,IAAjC,CADF,CADA,CADF,CADa;AAAA,GAAZ,CADD,CAJF,EAiBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC,UAAV;AAAqBC,MAAAA,MAAM,EAAC,EAA5B;AAA+BC,MAAAA,KAAK,EAAC;AAArC,KAAzB;AAAmE,IAAA,OAAO,EAAE,mBAAI;AAACzB,MAAAA,UAAU,CAAC0B,QAAX,CAAoB,SAApB,EAA+B;AAACC,QAAAA,GAAG,EAAC1B;AAAL,OAA/B;AAA6C;AAA9H,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC;AAAf,IADJ,CAjBF,CADJ;AAwBH;AAED,IAAMU,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC7BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,UAAU,EAAE,QADH;AAETX,IAAAA,eAAe,EAAE,MAFR;AAGTY,IAAAA,KAAK,EAAC;AAHG,GADkB;AAM7Bd,EAAAA,IAAI,EAAC;AACHE,IAAAA,eAAe,EAAE,MADd;AAEHE,IAAAA,OAAO,EAAC,EAFL;AAGHW,IAAAA,MAAM,EAAC,CAHJ;AAIHD,IAAAA,KAAK,EAAC;AAJH;AANwB,CAAlB,CAAf","sourcesContent":["import React, { version,useEffect, useState } from 'react';\r\nimport {FlatList,TouchableOpacity,StyleSheet,Image, Text, View, TextInput, TextComponent, ScrollView } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nexport default function ListDetail({route,navigation}) {\r\n  const { itemId } = route.params;\r\n  const [dataapi, setDataapi] = useState([])\r\n\r\n  function LoadData(){\r\n    fetch('http://192.168.1.107:45455/api/items/'+itemId).then((response)=>response.json()).then((data)=>setDataapi(data))\r\n  }\r\n  LoadData()  ;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n          <Text style={{fontSize:20}}>SEznam</Text>\r\n          \r\n          <Text>url: {(itemId)}</Text>\r\n          <View style={{flexDirection:'row'}}>\r\n          {dataapi.map((aa) => (\r\n          <TouchableOpacity onPress={()=>{}}>\r\n            <View style={styles.item}>\r\n            <View style={{borderLeftWidth:2,backgroundColor:'#'+aa.color,padding:5}}>\r\n              <Text style={{fontSize:20}}>{(aa.name)}</Text>\r\n            </View>\r\n          </View>\r\n          </TouchableOpacity>\r\n          ))}\r\n          </View>\r\n\r\n\r\n          <TouchableOpacity style={{position:'absolute',bottom:20,right:10}} onPress={()=>{navigation.navigate('AddItem', {url:itemId})}}>\r\n              <Ionicons name=\"add\"/>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      alignItems: 'center',\r\n      backgroundColor: '#fff',\r\n      width:'100%'\r\n    },\r\n    item:{\r\n      backgroundColor: '#fff',\r\n      padding:10,\r\n      margin:5,\r\n      width:'100%'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}