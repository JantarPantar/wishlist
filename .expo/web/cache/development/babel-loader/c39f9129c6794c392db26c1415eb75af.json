{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function OpenList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    \"_name\": \"model\",\n    \"_desc\": \"model\",\n    \"_id\": \"model\",\n    \"_color\": \"model\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var fetchpairs = function fetchpairs() {\n      var raw;\n      return _regeneratorRuntime.async(function fetchpairs$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@WishList'));\n\n            case 2:\n              raw = _context.sent;\n              setData(JSON.parse(raw + \"\"));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchpairs();\n  }, []);\n\n  function save() {\n    return _regeneratorRuntime.async(function save$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@WishList', \"\"));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function read() {\n    return _regeneratorRuntime.async(function read$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = alert;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@WishList'));\n\n          case 3:\n            _context3.t1 = _context3.sent;\n            (0, _context3.t0)(_context3.t1);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var ListG = function ListG() {\n    return React.createElement(View, null, React.createElement(ScrollView, {\n      style: {\n        width: '100%'\n      }\n    }, data.map(function (aa) {\n      return React.createElement(TouchableOpacity, {\n        key: aa._id,\n        onPress: function onPress() {\n          navigation.navigate('ListDetail', {\n            itemId: aa._id\n          });\n        }\n      }, React.createElement(View, {\n        style: styles.item\n      }, React.createElement(View, {\n        style: {\n          borderLeftWidth: 2,\n          borderLeftColor: '#' + aa._color,\n          padding: 5\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        }\n      }, aa._name), React.createElement(Text, {\n        style: {\n          color: 'grey'\n        }\n      }, aa._desc))));\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        bottom: 50,\n        right: 50,\n        backgroundColor: \"#FF6D6D\",\n        borderRadius: 20,\n        alignSelf: 'center',\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        navigation.navigate('Scan');\n      }\n    }, React.createElement(Ionicons, {\n      color: \"white\",\n      size: 50,\n      name: \"scan\"\n    })));\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ListG, null));\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  item: {\n    backgroundColor: '#fff',\n    padding: 10,\n    margin: 5,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/Norbert PC/Desktop/WishList/wishlist/Screens/OpenList.tsx"],"names":["React","useEffect","useState","Ionicons","AsyncStorage","OpenList","navigation","data","setData","fetchpairs","getItem","raw","JSON","parse","save","setItem","read","alert","ListG","width","map","aa","_id","navigate","itemId","styles","item","borderLeftWidth","borderLeftColor","_color","padding","fontSize","_name","color","_desc","position","bottom","right","backgroundColor","borderRadius","alignSelf","justifyContent","container","StyleSheet","create","alignItems","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,eAAe,SAASC,QAAT,OAAgC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAE7C,kBAAwBJ,QAAQ,CAAC,CAAC;AAAC,aAAQ,OAAT;AAAiB,aAAQ,OAAzB;AAAiC,WAAM,OAAvC;AAA+C,cAAS;AAAxD,GAAD,CAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACDL,YAAY,CAACM,OAAb,CAAqB,WAArB,CADC;;AAAA;AACbC,cAAAA,GADa;AAEjBH,cAAAA,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAC,EAAf,CAAD,CAAP;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAIAF,IAAAA,UAAU;AACb,GANU,EAMR,EANQ,CAAT;;AAUE,WAAeK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQV,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkC,EAAlC,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,WAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,2BACEC,KADF;AAAA;AAAA,6CACcb,YAAY,CAACM,OAAb,CAAqB,WAArB,CADd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,MAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAK;AACf,WACF,oBAAC,IAAD,QACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP;AAAnB,OACGZ,IAAI,CAACa,GAAL,CAAS,UAACC,EAAD;AAAA,aACV,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEA,EAAE,CAACC,GAA1B;AAA+B,QAAA,OAAO,EAAE,mBAAI;AAAChB,UAAAA,UAAU,CAACiB,QAAX,CAAoB,YAApB,EAAkC;AAACC,YAAAA,MAAM,EAACH,EAAE,CAACC;AAAX,WAAlC;AAAmD;AAAhG,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC;AAApB,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAC,CAAjB;AAAmBC,UAAAA,eAAe,EAAC,MAAIP,EAAE,CAACQ,MAA1C;AAAiDC,UAAAA,OAAO,EAAC;AAAzD;AAAb,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC;AAAV;AAAb,SAA8BV,EAAE,CAACW,KAAjC,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP;AAAb,SAA+BZ,EAAE,CAACa,KAAlC,CAFF,CADA,CADF,CADU;AAAA,KAAT,CADH,CADF,EAcI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC,UAAV;AAAqBC,QAAAA,MAAM,EAAC,EAA5B;AAA+BC,QAAAA,KAAK,EAAC,EAArC;AAAwCC,QAAAA,eAAe,EAAC,SAAxD;AAAmEC,QAAAA,YAAY,EAAC,EAAhF;AAAmFC,QAAAA,SAAS,EAAC,QAA7F;AAAsGC,QAAAA,cAAc,EAAC;AAArH,OAAzB;AAAyJ,MAAA,OAAO,EAAE,mBAAI;AAACnC,QAAAA,UAAU,CAACiB,QAAX,CAAoB,MAApB;AAA4B;AAAnM,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAE,EAA9B;AAAkC,MAAA,IAAI,EAAC;AAAvC,MADF,CAdJ,CADE;AAsBH,GAvBD;;AAyBA,SACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACiB;AAApB,KACQ,oBAAC,KAAD,OADR,CADA;AAMH;AAED,IAAMjB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,UAAU,EAAE;AADH,GADkB;AAI7BnB,EAAAA,IAAI,EAAC;AACHY,IAAAA,eAAe,EAAE,MADd;AAEHR,IAAAA,OAAO,EAAC,EAFL;AAGHgB,IAAAA,MAAM,EAAC,CAHJ;AAIH3B,IAAAA,KAAK,EAAC;AAJH;AAJwB,CAAlB,CAAf","sourcesContent":["import React, { version,useEffect, useState } from 'react';\r\nimport {FlatList,TouchableOpacity,StyleSheet,Image, Text, View, TextInput, TextComponent, ScrollView } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport default function OpenList({navigation}) {\r\n\r\n  const [data, setData] = useState([{\"_name\":\"model\",\"_desc\":\"model\",\"_id\":\"model\",\"_color\":\"model\"}])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchpairs = async() => {\r\n      var raw = await AsyncStorage.getItem('@WishList');\r\n      setData(JSON.parse(raw+\"\"))\r\n    }\r\n    fetchpairs()\r\n}, [])\r\n\r\n\r\n\r\n    async function save(){\r\n      await AsyncStorage.setItem('@WishList', \"\");\r\n    } \r\n    async function read(){\r\n      alert(await AsyncStorage.getItem('@WishList'));\r\n    } \r\n\r\n    const ListG = () =>{\r\n        return(\r\n      <View>\r\n        <ScrollView style={{width:'100%'}}>\r\n          {data.map((aa) => (\r\n          <TouchableOpacity key={aa._id} onPress={()=>{navigation.navigate('ListDetail', {itemId:aa._id})}}>\r\n            <View style={styles.item}>\r\n            <View style={{borderLeftWidth:2,borderLeftColor:'#'+aa._color,padding:5}}>\r\n              <Text style={{fontSize:20}}>{(aa._name)}</Text>\r\n              <Text style={{color:'grey'}}>{(aa._desc)}</Text>\r\n            </View>\r\n          </View>\r\n          </TouchableOpacity>\r\n          ))}\r\n          </ScrollView>\r\n          \r\n          <TouchableOpacity style={{position:'absolute',bottom:50,right:50,backgroundColor:\"#FF6D6D\", borderRadius:20,alignSelf:'center',justifyContent:'center'}} onPress={()=>{navigation.navigate('Scan')}}>\r\n            <Ionicons color=\"white\" size={50} name=\"scan\"/>\r\n          </TouchableOpacity>\r\n      </View>\r\n      );\r\n\r\n      \r\n    }\r\n\r\n    return (\r\n    <View style={styles.container}>\r\n            <ListG/>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      alignItems: 'center',\r\n    },\r\n    item:{\r\n      backgroundColor: '#fff',\r\n      padding:10,\r\n      margin:5,\r\n      width:'100%'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}