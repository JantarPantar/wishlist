{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function OpenList(_ref) {\n  var navigation, save, read, _useState, _useState2, dataL, setDataL, ListG;\n\n  return _regeneratorRuntime.async(function OpenList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          read = function _read() {\n            return _regeneratorRuntime.async(function read$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.t0 = alert;\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(AsyncStorage.getItem('@WishList'));\n\n                  case 3:\n                    _context2.t1 = _context2.sent;\n                    (0, _context2.t0)(_context2.t1);\n\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          save = function _save() {\n            return _regeneratorRuntime.async(function save$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(AsyncStorage.setItem('@WishList', \"\"));\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          navigation = _ref.navigation;\n          _context3.t0 = useState;\n          _context3.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@WishList'));\n\n        case 6:\n          _context3.t1 = _context3.sent;\n          _useState = (0, _context3.t0)(_context3.t1);\n          _useState2 = _slicedToArray(_useState, 2);\n          dataL = _useState2[0];\n          setDataL = _useState2[1];\n\n          ListG = function ListG() {\n            return React.createElement(View, null, React.createElement(Text, null, \"ahoj\"), React.createElement(FlatList, {\n              data: JSON.parse(JSON.stringify(dataL)),\n              renderItem: function renderItem(_ref2) {\n                var item = _ref2.item;\n                return React.createElement(Text, null, item._name);\n              }\n            }));\n          };\n\n          return _context3.abrupt(\"return\", React.createElement(View, {\n            style: styles.container\n          }, React.createElement(ListG, null), React.createElement(Image, {\n            style: {\n              height: 200,\n              width: 200,\n              marginBottom: 70,\n              marginTop: 20\n            },\n            source: require(\"../assets/l.png\")\n          }), React.createElement(Text, null, \"A\"), React.createElement(TouchableOpacity, {\n            onPress: save\n          }, React.createElement(Text, null, \"Touch me if u want to save some shit\")), React.createElement(TouchableOpacity, {\n            onPress: read\n          }, React.createElement(Text, null, \"Touch me if u want to read some shit\"))));\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Norbert PC/Desktop/WishList/wishlist/Screens/OpenList.tsx"],"names":["React","useState","AsyncStorage","OpenList","save","read","alert","getItem","setItem","navigation","dataL","setDataL","ListG","JSON","parse","stringify","item","_name","styles","container","height","width","marginBottom","marginTop","require","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAyC,OAAzC;;;;;;;AAGA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,eAAe,SAAeC,QAAf;AAAA,kBACIC,IADJ,EAIIC,IAJJ;;AAAA;AAAA;AAAA;AAAA;AAIIA,UAAAA,IAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,mCAKTC,KALS;AAAA;AAAA,qDAKGJ,YAAY,CAACK,OAAb,CAAqB,WAArB,CALH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACIH,UAAAA,IADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEHF,YAAY,CAACM,OAAb,CAAqB,WAArB,EAAkC,EAAlC,CAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAyBC,UAAAA,UAAzB,QAAyBA,UAAzB;AAAA,yBAOeR,QAPf;AAAA;AAAA,2CAO8BC,YAAY,CAACK,OAAb,CAAqB,WAArB,CAP9B;;AAAA;AAAA;AAAA;AAAA;AAOJG,UAAAA,KAPI;AAOGC,UAAAA,QAPH;;AAULC,UAAAA,KAVK,GAUG,SAARA,KAAQ,GAAK;AACf,mBAEE,oBAAC,IAAD,QACE,oBAAC,IAAD,eADF,EAEE,oBAAC,QAAD;AACF,cAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,KAAf,CAAX,CADJ;AAEF,cAAA,UAAU,EAAE;AAAA,oBAAEM,IAAF,SAAEA,IAAF;AAAA,uBACZ,oBAAC,IAAD,QAAOA,IAAI,CAACC,KAAZ,CADY;AAAA;AAFV,cAFF,CAFF;AAaH,WAxBU;;AAAA,4CA2BX,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,aACE,oBAAC,KAAD,OADF,EAEU,oBAAC,KAAD;AACN,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAC,GAAR;AAAYC,cAAAA,KAAK,EAAC,GAAlB;AAAsBC,cAAAA,YAAY,EAAC,EAAnC;AAAsCC,cAAAA,SAAS,EAAC;AAAhD,aADD;AACsD,YAAA,MAAM,EAAEC,OAAO;AADrE,YAFV,EAKA,oBAAC,IAAD,YALA,EAOE,oBAAC,gBAAD;AAAkB,YAAA,OAAO,EAAEpB;AAA3B,aAAiC,oBAAC,IAAD,+CAAjC,CAPF,EAQE,oBAAC,gBAAD;AAAkB,YAAA,OAAO,EAAEC;AAA3B,aAAiC,oBAAC,IAAD,+CAAjC,CARF,CA3BW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCf,IAAMa,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState, version } from 'react';\r\nimport {FlatList,TouchableOpacity,StyleSheet,Image, Text, View, TextInput, TextComponent } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nexport default async function OpenList({navigation}) {\r\n    async function save(){\r\n      await AsyncStorage.setItem('@WishList', \"\");\r\n    } \r\n    async function read(){\r\n      alert(await AsyncStorage.getItem('@WishList'));\r\n    } \r\n    const [dataL, setDataL] = useState(await AsyncStorage.getItem('@WishList'));\r\n\r\n\r\n    const ListG = () =>{\r\n        return(\r\n\r\n          <View>\r\n            <Text>ahoj</Text>\r\n            <FlatList\r\n          data={JSON.parse(JSON.stringify(dataL))}\r\n          renderItem={({item}) => \r\n          <Text>{item._name}</Text>\r\n        }/>\r\n          </View>\r\n\r\n        );\r\n      \r\n    }\r\n\r\n    return (\r\n    <View style={styles.container}>\r\n      <ListG/>\r\n              <Image\r\n        style={{height:200,width:200,marginBottom:70,marginTop:20}} source={require('../assets/l.png')}\r\n      />\r\n    <Text>A</Text>\r\n        \r\n      <TouchableOpacity onPress={save}><Text>Touch me if u want to save some shit</Text></TouchableOpacity>\r\n      <TouchableOpacity onPress={read}><Text>Touch me if u want to read some shit</Text></TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}